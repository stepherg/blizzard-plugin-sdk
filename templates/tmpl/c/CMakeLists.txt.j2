cmake_minimum_required(VERSION 3.10)

project({{ plugin_name }}_plugin C)

set(CMAKE_C_STANDARD 99)
set(CMAKE_POSITION_INDEPENDENT_CODE ON)

find_package(PkgConfig REQUIRED)
pkg_check_modules(BLIZZARD_C REQUIRED blizzard-c)
pkg_get_variable(BLIZZARD_C_PLUGIN_DIR blizzard-c plugindir)

if(NOT BLIZZARD_C_PLUGIN_DIR)
   message(FATAL_ERROR "Blizzard plugin directory not found")
endif()

find_library(PROTOBUF_C_LIBRARIES NAMES protobuf-c)
find_package(Protobuf REQUIRED)

find_library(RBUS_LIBRARY NAMES rbus)
find_path(
   RBUS_INCLUDE_DIR
   NAMES rbus.h
   PATH_SUFFIXES rbus
)
if(NOT RBUS_LIBRARY)
   if(APPLE)
      message(FATAL_ERROR "rbus not found, run:\nbrew tap stepherg/tap\nbrew install rbus")
   else()
      message(FATAL_ERROR "rbus not found")
   endif()
endif()

# Source files
set(SOURCES
   {{ plugin_name }}_plugin.c
)

# Include directories
include_directories(
   ${CMAKE_CURRENT_SOURCE_DIR}
   ${BLIZZARD_C_INCLUDE_DIRS}
   ${RBUS_INCLUDE_DIR}
)

if(APPLE)
   include_directories(/opt/homebrew/include)
   set(CMAKE_C_FLAGS
      "${CMAKE_C_FLAGS} -Wno-typedef-redefinition")
endif()

# Create library
add_library(echo_plugin SHARED ${SOURCES})

# Link libraries
target_link_libraries({{ plugin_name }}_plugin
   ${PROTOBUF_C_LIBRARIES}
   ${RBUS_LIBRARY}
   ${BLIZZARD_C_LIBRARIES}
)

# Compiler flags
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS}")

install(TARGETS {{ plugin_name }}_plugin
   LIBRARY DESTINATION ${BLIZZARD_C_PLUGIN_DIR}
)
